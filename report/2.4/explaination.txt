yes changing the set of adversial node, more importaintly there locatioon in the network affect the result. The network topology we have constructed is a tree topology with extra edges connected uniformly randomly. if root of a subtree is adversary node then it has the power to partition the two branches of the subtree in worst case, and in general increase the hops required to transmit information from one node to another. 

As f increases time delay to get the packet which would eventually be dropped by the adversary increases for example vote for empty hash. if the result for reduction was empty hash then the protocol takes high amount of steps to reach consensus and in some case no consensus at all. else if the result of reduction was one of the proposed block by adveersary then it was observed in one round that FINAL consensus was reached on the reduced block. as f increases number of steps to reach consensus on empty hash increases as well. This is amplified by the fact that lambda_step used in the simulation is not sufficient to handle the increase delay incured due to adversary dropping off vote packets, which now these packets have to take a longer route. 